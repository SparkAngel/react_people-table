{"version":3,"sources":["GetFiles.js","Persone.js","PeopleTable.js","FuncSorting.js","App.js","index.js"],"names":["getFiles","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","response","people","listPeopleSort","wrap","_context","prev","next","fetch","sent","json","map","person","index","objectSpread","id","age","died","born","century","Math","ceil","children","filter","child","father","name","mother","pers","abrupt","stop","apply","this","arguments","Person","handleSelect","selected","classes","classnames","concat","Person--selected","Person--man","sex","Person--womam","Person--long-liver","People__Born--Before_1650","People__Died--Before_1800","react_default","createElement","className","onClick","join","PeopleTable","state","selectedPersonId","_this2","peopleData","props","src_Persone","key","setState","React","Component","FuncSorting","sortType","listForSorting","forSortingData","toConsumableArray","sort","b","localeCompare","App","currentListOfPeople","isLoaded","onClickLoad","listPeople","_this","clickSortingBy","clickReset","searchFunc","event","search","target","value","persone","toLowerCase","indexOf","length","type","hidden","placeholder","onChange","src_PeopleTable_0","ReactDOM","render","src_App","test","document","getElementById"],"mappings":"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","file":"static/js/main.778f2550.chunk.js","sourcesContent":["\n\nconst getFiles = async() => {\n  const URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n  const response = await fetch(URL);\n  const people = await response.json();\n\n  const listPeopleSort = people.map((person, index) => ({\n    ...person,\n    id: index + 1,\n    age: person.died - person.born,\n    century: Math.ceil(person.died / 100),\n    children:\n    people\n    .filter(child => child.father === person.name\n      || child.mother === person.name)\n    .map(pers => pers.name)\n  })\n);\n\n  return listPeopleSort;\n};\n\nexport default getFiles;\n","import React from 'react';\nimport './Persone.css';\nimport classnames from 'classnames';\n\nconst Person = ({ person, handleSelect, selected }) => {\n\n  const classes = classnames(\n    `Person`,\n    `Person--lived-in-${person.century}`,\n\n    {\n\n      'Person--selected': selected,\n      'Person--man': person.sex === 'm',\n      'Person--womam': person.sex === 'f',\n      'Person--long-liver': person.age >= 65,\n      'People__Born--Before_1650': person.born < 1650,\n      'People__Died--Before_1800': person.died > 1800,\n    }\n  );\n\n  return (\n    <tr className={ classes }\n        onClick={ handleSelect }\n    >\n    <td>{person.id}</td>\n    <td>{person.name}</td>\n    <td>{person.sex}</td>\n    <td>{person.born}</td>\n    <td>{person.died}</td>\n    <td>{person.mother}</td>\n    <td>{person.father}</td>\n    <td>{person.age}</td>\n    <td>{person.century}</td>\n    <td>{person.children.join(', ')}</td>\n  </tr>\n  );\n}\n\nexport default Person;\n","import React from 'react';\n//import classnames from 'classnames';\nimport Person from './Persone';\nimport './PeopleTable.css';\n\n\nclass PeopleTable extends React.Component {\n  state = {\n    selectedPersonId: null,\n  };\n\n  render () {\n    const { peopleData } = this.props;\n    const { selectedPersonId } = this.state;\n\n    return (\n      <table className=\"PeopleTable\">\n        <thead>\n          <tr>\n            <th>id</th>\n            <th>name</th>\n            <th>sex</th>\n            <th>born</th>\n            <th>died</th>\n            <th>mother</th>\n            <th>father</th>\n            <th>age</th>\n            <th>century</th>\n            <th>children</th>\n          </tr>\n        </thead>\n        <tbody>\n          {peopleData.map(person => (\n            <Person\n              person={person}\n              key={person.name}\n              selected={person.id === selectedPersonId}\n              handleSelect={() => {\n                this.setState({ selectedPersonId: person.id });\n              }}\n            />\n          ))}\n        </tbody>\n      </table>\n    )\n  }\n};\n\nexport default PeopleTable;\n","const FuncSorting = ({ sortType, listForSorting }) => {\n  let forSortingData = [...listForSorting];\n  forSortingData.sort((a, b) => {\n    switch (typeof a[sortType]) {\n      case 'string':\n        return a[sortType].localeCompare(b[sortType]);\n      case 'number':\n      case 'boolean':\n        return a[sortType] - b[sortType];\n      default:\n      return 0;\n    }\n  });\n   return forSortingData;\n};\n\nexport default FuncSorting;\n","import React from 'react';\nimport getFiles from './GetFiles';\nimport PeopleTable from './PeopleTable';\nimport FuncSorting from './FuncSorting';\n\nclass App extends React.Component {\n  state = {\n    currentListOfPeople: [],\n    listForSorting: [],\n    isLoaded: false,\n  }\n\nonClickLoad = async() => {\n  const listPeople = await getFiles();\n  this.setState({\n    currentListOfPeople: [...listPeople],\n    listForSorting: [...listPeople],\n    isLoaded: true,\n  });\n};\n\nclickSortingBy = (sortType) => {\n  this.setState({\n    sortType,\n  });\n  this.setState (state => ({\n    currentListOfPeople: FuncSorting(state),\n  }));\n};\n\nclickReset = () => {\n  this.setState (state => ({\n    currentListOfPeople: state.listForSorting,\n  }));\n};\n\nsearchFunc = (event) => {\n  const search = event.target.value;\n  this.setState (state => ({\n    currentListOfPeople: state.currentListOfPeople\n      .filter(persone => persone.name\n      .toLowerCase()\n      .indexOf(search.toLowerCase()) !== -1),\n  }));\n};\n\nrender() {\n  return (\n    <div>\n      <header>\n        <h2>\n          People table:\n          {this.state.isLoaded && this.state.currentListOfPeople.length}\n        </h2>\n      </header>\n      <main>\n        <button\n          className=\"load-button\"\n          type=\"button\"\n          onClick={this.onClickLoad}\n          hidden={this.state.isLoaded}\n        >\n              Load the table\n        </button>\n        <form>\n          <input\n            placeholder=\"Search\"\n            onChange={this.searchFunc}\n            className=\"app_search-input\"\n          />\n        </form>\n        <button\n          onClick = {() => this.clickSortingBy('name')}\n          className=\"app_sort-button\"\n          type=\"button\"\n        >\n              sort by name\n        </button>\n        <button\n          onClick = {() => this.clickSortingBy('id')}\n          className=\"app_sort-button\"\n          type=\"button\"\n        >\n              sort by id\n        </button>\n        <button\n          onClick = {() => this.clickSortingBy('age')}\n          className=\"app_sort-button\"\n          type=\"button\"\n        >\n              sort by age\n        </button>\n        <button\n          onClick = {() => this.clickSortingBy('born')}\n          className=\"app_sort-button\"\n          type=\"button\"\n        >\n                sort by born\n        </button>\n        <button\n          onClick = {() => this.clickSortingBy('died')}\n          className=\"app_sort-button\"\n          type=\"button\"\n        >\n                sort by died\n        </button>\n        <button\n          onClick = {() => this.clickReset()}\n          className=\"app_sort-button\"\n          type=\"button\"\n        >\n                RESET\n        </button>\n        <PeopleTable peopleData={this.state.currentListOfPeople} />\n      </main>\n    </div>\n  );\n}\n};\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App test={123} />, document.getElementById('root'));\r\n"],"sourceRoot":""}