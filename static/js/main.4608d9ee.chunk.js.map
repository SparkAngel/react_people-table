{"version":3,"sources":["GetFiles.js","Persone.js","PeopleTable.js","FuncSorting.js","App.js","index.js"],"names":["getFiles","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","response","people","listPeople","wrap","_context","prev","next","fetch","sent","json","map","person","index","objectSpread","id","age","died","born","century","Math","ceil","children","filter","child","father","name","mother","pers","abrupt","stop","apply","this","arguments","Person","handleSelect","selected","react_default","createElement","key","className","classnames","person--selected","onClick","peopleTable__row","person--male","sex","person--female","people__Born--Before_1650","people__Died--Before_1800","person--father","length","people__old_65","defineProperty","concat","join","defaultProps","PeopleTable","state","selectedPersonId","_this2","peopleData","props","src_Persone","setState","React","Component","direction","forSortingData","FuncSorting","sortType","listForSorting","reverse","toConsumableArray","sort","b","localeCompare","App","currentListOfPeople","isLoaded","onClickLoad","_this","clickSortingBy","clickReset","searchFunc","event","value","target","prevState","toLowerCase","includes","type","hidden","placeholder","onChange","src_PeopleTable_0","ReactDOM","render","src_App","test","document","getElementById"],"mappings":"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","file":"static/js/main.4608d9ee.chunk.js","sourcesContent":["const url = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nconst getFiles = async() => {\n  const response = await fetch(url);\n  const people = await response.json();\n\n  const listPeople = people.map((person, index) => ({\n    ...person,\n    id: index + 1,\n    age: person.died - person.born,\n    century: Math.ceil(person.died / 100),\n    children:\n    people\n      .filter(child => child.father === person.name\n      || child.mother === person.name)\n      .map(pers => pers.name),\n  }));\n\n  return listPeople;\n};\n\nexport default getFiles;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Persone.css';\nimport classnames from 'classnames';\n\nconst Person = ({ person, handleSelect, selected }) => (\n  <tr\n    key={person.name}\n    className={classnames({\n      'person--selected': selected,\n    })}\n    onClick={handleSelect}\n  >\n    <td>{person.id}</td>\n    <td>{person.name}</td>\n    <td\n      className={classnames({\n        peopleTable__row: true,\n        'person--male': person.sex === 'm',\n        'person--female': person.sex === 'f',\n      })}\n    >\n      {person.sex}\n    </td>\n    <td\n      className={classnames({\n        peopleTable__row: true,\n        'people__Born--Before_1650': person.born < 1650,\n      })}\n    >\n      {person.born}\n    </td>\n    <td\n      className={classnames({\n        peopleTable__row: true,\n        'people__Died--Before_1800': person.died > 1800,\n      })}\n    >\n      {person.died}\n    </td>\n    <td>{person.mother}</td>\n    <td\n      className={classnames({\n        peopleTable__row: true,\n        'person--father': person.sex === 'm' && person.children.length > 0,\n      })}\n    >\n      {person.father}\n    </td>\n    <td\n      className={classnames({\n        peopleTable__row: true,\n        'people__old_65': ((person.died - person.born) > 65),\n      })}\n    >\n      {person.age}\n    </td>\n    <td\n      className={classnames({\n        peopleTable__row: true,\n        [`person--lived-in-${person.century}`]: true,\n      })}\n    >\n      {person.century}\n    </td>\n    <td>{person.children.join(', ')}</td>\n  </tr>\n);\n\nPerson.propTypes = {\n  person: PropTypes.shape({\n    sex: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    born: PropTypes.number.isRequired,\n    died: PropTypes.number.isRequired,\n    mother: PropTypes.string.isRequired,\n    father: PropTypes.string.isRequired,\n    age: PropTypes.number.isRequired,\n    century: PropTypes.number.isRequired,\n    children: PropTypes.string.isRequired,\n    id: PropTypes.number.isRequired,\n  }).isRequired,\n};\n\nPerson.propTypes = {\n  person: PropTypes.shape(Person.propTypes).isRequired,\n  selected: PropTypes.bool,\n  handleSelect: PropTypes.func,\n};\n\nPerson.defaultProps = {\n  selected: false,\n  handleSelect: () => {},\n};\n\nexport default Person;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport Person from './Persone';\nimport './PeopleTable.css';\n\nclass PeopleTable extends React.Component {\n  state = {\n    selectedPersonId: null,\n  };\n\n  render() {\n    const { peopleData } = this.props;\n    const { selectedPersonId } = this.state;\n\n    return (\n      <table\n        className={classnames({\n          PeopleTable: true,\n        })}\n      >\n        <thead>\n          <tr>\n            <th>id</th>\n            <th>name</th>\n            <th>sex</th>\n            <th>born</th>\n            <th>died</th>\n            <th>mother</th>\n            <th>father</th>\n            <th>age</th>\n            <th>century</th>\n            <th>children</th>\n          </tr>\n        </thead>\n        <tbody>\n          {peopleData.map(person => (\n            <Person\n              person={person}\n              key={person.name}\n              selected={person.id === selectedPersonId}\n              handleSelect={() => {\n                this.setState({ selectedPersonId: person.id });\n              }}\n            />\n          ))}\n        </tbody>\n      </table>\n    );\n  }\n}\n\nPeopleTable.propTypes = {\n  peopleData: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default PeopleTable;\n","let direction = '';\nlet forSortingData = [];\n\nconst FuncSorting = ({ sortType, listForSorting }) => {\n  if (direction === sortType) {\n    return forSortingData.reverse();\n  }\n\n  direction = sortType;\n  forSortingData = [...listForSorting];\n  forSortingData.sort((a, b) => {\n    switch (typeof a[sortType]) {\n      case 'string':\n        return a[sortType].localeCompare(b[sortType]);\n      case 'number':\n      case 'boolean':\n        return a[sortType] - b[sortType];\n      default:\n        return 0;\n    }\n  });\n\n  return forSortingData;\n};\n\nexport default FuncSorting;\n","import React from 'react';\nimport getFiles from './GetFiles';\nimport PeopleTable from './PeopleTable';\nimport FuncSorting from './FuncSorting';\n\nclass App extends React.Component {\n  state = {\n    currentListOfPeople: [],\n    listForSorting: [],\n    isLoaded: false,\n  }\n\nonClickLoad = async() => {\n  const listPeople = await getFiles();\n\n  this.setState({\n    currentListOfPeople: [...listPeople],\n    listForSorting: [...listPeople],\n    isLoaded: true,\n  });\n};\n\nclickSortingBy = (sortType) => {\n  this.setState({\n    sortType,\n  });\n\n  this.setState(state => (\n    { currentListOfPeople: FuncSorting(state) }\n  ));\n};\n\nclickReset = () => {\n  this.setState(state => ({\n    currentListOfPeople: state.listForSorting,\n  }));\n};\n\nsearchFunc = (event) => {\n  const { value } = event.target;\n\n  this.setState(prevState => ({\n    currentListOfPeople: prevState.listForSorting.filter(\n      person => [person.mother, person.name, person.mother]\n        .join('').toLowerCase().includes(value.toLowerCase())\n    ),\n  }));\n}\n\nrender() {\n  return (\n    <div>\n      <header>\n        <h2>\n          People table:\n          {this.state.isLoaded && this.state.currentListOfPeople.length}\n        </h2>\n      </header>\n      <main>\n        <button\n          className=\"load-button\"\n          type=\"button\"\n          onClick={this.onClickLoad}\n          hidden={this.state.isLoaded}\n        >\n              Load the table\n        </button>\n        <form>\n          <input\n            placeholder=\"Search\"\n            onChange={this.searchFunc}\n            className=\"app_search-input\"\n          />\n        </form>\n        <button\n          onClick={() => this.clickSortingBy('name')}\n          className=\"app_sort-button\"\n          type=\"button\"\n        >\n              sort by name\n        </button>\n        <button\n          onClick={() => this.clickSortingBy('id')}\n          className=\"app_sort-button\"\n          type=\"button\"\n        >\n              sort by id\n        </button>\n        <button\n          onClick={() => this.clickSortingBy('age')}\n          className=\"app_sort-button\"\n          type=\"button\"\n        >\n              sort by age\n        </button>\n        <button\n          onClick={() => this.clickSortingBy('born')}\n          className=\"app_sort-button\"\n          type=\"button\"\n        >\n                sort by born\n        </button>\n        <button\n          onClick={() => this.clickSortingBy('died')}\n          className=\"app_sort-button\"\n          type=\"button\"\n        >\n                sort by died\n        </button>\n        <button\n          onClick={() => this.clickReset()}\n          className=\"app_sort-button\"\n          type=\"button\"\n        >\n                RESET\n        </button>\n        <PeopleTable peopleData={this.state.currentListOfPeople} />\n      </main>\n    </div>\n  );\n}\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App test={123} />, document.getElementById('root'));\r\n"],"sourceRoot":""}